// <auto-generated />
using System;
using HabitTracker.Api.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HabitTracker.Api.Migrations.Application
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251018055615_Add_Tags")]
    partial class Add_Tags
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("dev_habit")
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HabitTracker.Api.Entities.Habit", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastCompletedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAtUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Habits", "dev_habit");
                });

            modelBuilder.Entity("HabitTracker.Api.Entities.Tag", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAtUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Tags", "dev_habit");
                });

            modelBuilder.Entity("HabitTracker.Api.Entities.Habit", b =>
                {
                    b.OwnsOne("HabitTracker.Api.Entities.Frequency", "Frequency", b1 =>
                        {
                            b1.Property<string>("HabitId")
                                .HasColumnType("nvarchar(500)");

                            b1.Property<int>("TimesPerPeriod")
                                .HasColumnType("int");

                            b1.Property<int>("Type")
                                .HasColumnType("int");

                            b1.HasKey("HabitId");

                            b1.ToTable("Habits", "dev_habit");

                            b1.WithOwner()
                                .HasForeignKey("HabitId");
                        });

                    b.OwnsOne("HabitTracker.Api.Entities.Milestone", "Milestone", b1 =>
                        {
                            b1.Property<string>("HabitId")
                                .HasColumnType("nvarchar(500)");

                            b1.Property<int>("Current")
                                .HasColumnType("int");

                            b1.Property<int>("Target")
                                .HasColumnType("int");

                            b1.HasKey("HabitId");

                            b1.ToTable("Habits", "dev_habit");

                            b1.WithOwner()
                                .HasForeignKey("HabitId");
                        });

                    b.OwnsOne("HabitTracker.Api.Entities.Target", "Target", b1 =>
                        {
                            b1.Property<string>("HabitId")
                                .HasColumnType("nvarchar(500)");

                            b1.Property<string>("Unit")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)");

                            b1.Property<int>("Value")
                                .HasColumnType("int");

                            b1.HasKey("HabitId");

                            b1.ToTable("Habits", "dev_habit");

                            b1.WithOwner()
                                .HasForeignKey("HabitId");
                        });

                    b.Navigation("Frequency")
                        .IsRequired();

                    b.Navigation("Milestone");

                    b.Navigation("Target")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
